<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.wheelingcamp.board.mapper.BoardMapper">

		<select id="getListCount" resultType="_int">
				SELECT COUNT(*) FROM "BOARD"
				WHERE BOARD_DEL_FL = 'N'
		</select>
      
       
        <select id="selectBoardList">
        	
        	  SELECT ROWNUM, BOARD_NO, BOARD_TITLE, MEMBER_NICK_NAME, TO_CHAR(BOARD_WRITE_DATE, 'YYYY"."MM"."DD') BOARD_WRITE_DATE,
        	   READ_COUNT , 
   
      (SELECT COUNT(*) 
      FROM "COMMENT" C
      WHERE B.BOARD_NO = C.BOARD_NO) COMMENT_COUNT,
      
      (SELECT COUNT(*) 
      FROM BOARD_LIKE L
      WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
      
         <![CDATA[
         CASE 
            WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24 / 60  -- 조건  1/24 = 한 시간
            THEN FLOOR((SYSDATE-BOARD_WRITE_DATE) * 24 * 60 * 60 ) || '초 전'
            
            WHEN SYSDATE - BOARD_WRITE_DATE < 1 / 24  
            THEN FLOOR((SYSDATE-BOARD_WRITE_DATE) * 24 * 60) || '분 전'
            
            WHEN SYSDATE - BOARD_WRITE_DATE < 1 
            THEN FLOOR((SYSDATE-BOARD_WRITE_DATE) * 24) || '시간 전'
            
            ELSE TO_CHAR(BOARD_WRITE_DATE, 'YYYY-MM-DD')
            
         END BOARD_WRITE_DATE
         ]]>
      
      FROM BOARD B
      JOIN "MEMBER" USING(MEMBER_NO)
      WHERE BOARD_DEL_FL = 'N'
      ORDER BY ROWNUM DESC
        	
        		
        </select>
        
       
       <select id="selectOne" resultMap="board_rm">
       			SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,READ_COUNT,
     			 MEMBER_NO, MEMBER_NICK_NAME, PROFILE_IMG,
      			TO_CHAR(BOARD_WRITE_DATE, 'YYYY "-" MM "-" DD') BOARD_WRITE_DATE, 
     			 TO_CHAR(BOARD_UPDATE_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_UPDATE_DATE,
   
     			 (SELECT IMG_PATH || IMG_RENAME
      			 FROM "BOARD_IMG"
      			 WHERE BOARD_NO = ${boardNo}
      			 AND IMG_ORDER = #{imgOrder}) THUMBNAIL,
      		
      				
      				(SELECT COUNT(*)
      			    FROM "BOARD_LIKE"
        			  WHERE BOARD_NO = #{boardNo}) LIKE_COUNT,  
        			  
        			   (SELECT COUNT(*) FROM BOARD_LIKE
       				    WHERE MEMBER_NO = #{memberNo}
        			   AND BOARD_NO = #{boardNo}) LIKE_CHECK,
        			   
        			    
      (SELECT COUNT(*) 
      FROM "COMMENT"
      WHERE BOARD_NO = #{boardNo}) COMMENT_COUNT
 
      			FROM "BOARD"
      			JOIN "MEMBER" USING(MEMBER_NO)
    			  WHERE BOARD_DEL_FL = 'N'
     			 AND BOARD_NO = ${boardNo}
       </select>
       
       
       <resultMap type="Board" id="board_rm">
   
      <!-- id 태그 : PK 역할을 하는 컬럼, 필드를 작성하는 태그 -->
      <id property="boardNo" column="BOARD_NO"/>
      
      
      <!-- collection 태그
         select로 조회된 결과를 컬렉션(List)에 담아
         지정된 필드에 세팅
         
         property : List를 담을 DTO의 필드명
         select : 실행할 select의 id
         column : 조회 결과 중 지정된 컬럼의 값을 파라미터로 전달
         javaType : List(컬렉션)의 타입을 지정 
         ofType : List(컬렉션)의 제네릭(타입 제한) 지정
      -->
      
      <!-- 해당 게시글 이미지 목록 조회 후 필드에 저장 -->
      <collection 
         property="imgList"
         select="selectImageList"
         column="BOARD_NO"   
         javaType="java.util.ArrayList"
         ofType="BoardImage"
      />
      
      <!-- column : 선행된 select에서 조회한 BOARD_NO
               select문에서 먼저 조회된 후 DTO에 세팅된 것을 가져다 쓰기 때문에 뒤 Select문에서 사용할 때
               #{boardNo} (자바 표기법)을 사용한다
               
         property: selectImageList에서 가져온 결과를 담을 DTO 필드명 -->
      
      
      <!-- 해당 게시글 댓글 목록 조회 후 필드에 저장 -->
      <collection 
      property="commentList"
      select="selectCommentList"
      column="BOARD_NO"
      javaType="java.util.ArrayList"
      ofType="Comment"
      />
      
      
   </resultMap>
   
   <select id="selectImageList" resultType="BoardImage">
SELECT *
FROM "BOARD_IMG"
WHERE BOARD_NO = #{boardNo}
ORDER BY IMG_ORDER
</select>

<select id="selectCommentList" resultType="Comment">
   SELECT LEVEL, C.* FROM
(SELECT COMMENT_NO, COMMENT_CONTENT,
       TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일"') COMMENT_WRITE_DATE,
       BOARD_NO, MEMBER_NO, MEMBER_NICK_NAME, COMMENT_NO2, COMMENT_DEL_FL,PROFILE_IMG
   FROM "COMMENT"
   JOIN MEMBER USING(MEMBER_NO)
   WHERE BOARD_NO = ${boardNo}) C
WHERE COMMENT_DEL_FL = 'N'
OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
            WHERE SUB.COMMENT_NO2 = C.COMMENT_NO
            AND COMMENT_DEL_FL = 'N')
START WITH COMMENT_NO2 IS NULL

CONNECT BY PRIOR COMMENT_NO = COMMENT_NO2
ORDER SIBLINGS BY COMMENT_NO
</select>
       
       
       
    		 	 <update id="updateReadCount">
       				UPDATE "BOARD" SET
					READ_COUNT = READ_COUNT + 1
					WHERE BOARD_NO = #{boardNo}
    		   </update>
       
     		  <select id="selectReadCount" resultType="_int">
    	 			SELECT READ_COUNT
 					FROM "BOARD"
 					WHERE BOARD_NO = #{boardNo}
     		  </select>
      
      

   
</mapper>
